version: "3.7"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  # web-admin:
  #   image: vgo-web-admin:0.1.0
  #   ports:
  #     - 80:80

  # user-service:
  #   image: vgo-user-service:0.1.0
  #   restart: always
  #   hostname: user-service
  #   depends_on:
  #     - mysql
  #     - consul

  golang:
    build:
      context: ./golang
    working_dir: /data
    container_name: golang
    ports:
      - 8081:8081
    networks:
      - backend
    restart: always
    environment:
      - TZ=${TZ}
    volumes:
      - ${APP_PATH}:/data
    stdin_open: true
    tty: true

  # node:
  #   build:
  #     context: ./node
  #   working_dir: /data
  #   container_name: node
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #     # - NODE_ENV=development
  #   volumes:
  #     - ${APP_PATH}:/data
  #   stdin_open: true
  #   tty: true

  # php-fpm:
  #   build:
  #     context: ./php-fpm
  #   container_name: php-fpm
  #   ports:
  #     - 9000:9000
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #   volumes:
  #     - ${APP_PATH}:/data
  #     - ./php-fpm/conf/php.ini:/usr/local/etc/php/php.ini
  #     - ./php-fpm/conf/conf.d:/usr/local/etc/php/conf.d
  #     - ./php-fpm/conf/www.conf:/usr/local/etc/php-fpm.d/www.conf

  # nginx:
  #   build:
  #     context: ./nginx
  #   # container_name: nginx
  #   ports:
  #     - ${NGINX_HTTP_PORT}:80
  #     - ${NGINX_HTTPS_PORT}:443
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #     # - LOCAL_UID=$(id -u $USER)
  #     # - LOCAL_GID=$(id -g $USER)
  #   volumes:
  #     - ./nginx/etc/conf.d:/etc/nginx/conf.d
  #     - ./nginx/etc/nginx.conf:/etc/nginx/nginx.conf
  #     - ${DATA_PATH}/nginx/logs:/var/log/nginx
  #     - ${APP_PATH}:/data

  # mysql:
  #   build:
  #     context: ./mysql
  #   ports:
  #     - ${MYSQL_PORT}:3306
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #     - MYSQL_USER=${MYSQL_USERNAME}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #   volumes:
  #     - ./mysql/conf:/etc/mysql/conf.d
  #     - ${DATA_PATH}/mysql/logs:/logs
  #     - ${DATA_PATH}/mysql/data:/var/lib/mysql

  # redis:
  #   build:
  #     context: ./redis
  #   ports:
  #     - ${REDIS_PORT}:6379
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #   volumes:
  #     - ./redis/redis.conf:/etc/redis/redis.conf
  #     - ${DATA_PATH}/redis/data:/data

  # consul:
  #   image: bitnami/consul:latest
  #   # container_name: consul
  #   ports:
  #     - 8300:8300
  #     - 8301:8301
  #     - 8301:8301/udp
  #     - 8500:8500
  #     - 8600:8600
  #     - 8600:8600/udp
  #   networks:
  #     - backend
  #   restart: always
  #   volumes:
  #     - ${DATA_PATH}/consul/data:/bitnami

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   # container_name: jaegertracing
  #   ports:
  #     - 5775:5775/udp
  #     - 6831:6831/udp
  #     - 6832:6832/udp
  #     - 5778:5778
  #     - ${JAEGER_PORT}:16686
  #     - 14250:14250
  #     - 14268:14268
  #     - 14269:14269
  #     - 9411:9411
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     COLLECTOR_ZIPKIN_HOST_PORT: 9411

  # prometheus:
  #   image: bitnami/prometheus:latest
  #   # container_name: prometheus
  #   ports:
  #     - ${PROMETHEUS_PORT}:9090
  #   networks:
  #     - backend
  #   restart: always
  #   environment:
  #     - TZ=${TZ}
  #   volumes:
  #     - ${DATA_PATH}/prometheus/data:/opt/bitnami/prometheus/data
  #     - ${DATA_PATH}/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

  # dtm:
  #   image: yedf/dtm:latest
  #   environment:
  #     - TZ=${TZ}
  #   entrypoint:
  #     - "/app/dtm/dtm"
  #     - "-c=/app/dtm/configs/config.yaml"
  #   ports:
  #     - "${DTM_HTTP_PORT}:36789"
  #     - "${DTM_GRPC_PORT}:36790"
  #   networks:
  #     - backend
  #   restart: always
  #   volumes:
  #     - ${DATA_PATH}/dtm/config.yml:/app/dtm/configs/config.yaml
