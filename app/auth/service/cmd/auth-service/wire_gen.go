// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/lalifeier/vvgo-mall/app/auth/service/internal/biz"
	"github.com/lalifeier/vvgo-mall/app/auth/service/internal/conf"
	"github.com/lalifeier/vvgo-mall/app/auth/service/internal/data"
	"github.com/lalifeier/vvgo-mall/app/auth/service/internal/server"
	"github.com/lalifeier/vvgo-mall/app/auth/service/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	authUsecase := biz.NewAuthUsecase(logger)
	captchaUsecase := biz.NewCaptchaUsecase(logger)
	serverServer := server.NewOAuthServer()
	authService := service.NewAuthService(logger, authUsecase, captchaUsecase, serverServer)
	engine := server.NewGinServer(authService)
	httpServer := server.NewHTTPServer(confServer, logger, authService, engine)
	grpcServer := server.NewGRPCServer(confServer, logger, authService)
	registrar := data.NewRegistrar(registry)
	app := newApp(logger, httpServer, grpcServer, registrar)
	return app, func() {
	}, nil
}
