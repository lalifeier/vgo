// Code generated by entc, DO NOT EDIT.

package dict

const (
	// Label holds the string label denoting the dict type in the database.
	Label = "dict"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDictTypeID holds the string denoting the dict_type_id field in the database.
	FieldDictTypeID = "dict_type_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldLabel holds the string denoting the label field in the database.
	FieldLabel = "label"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldIsDefault holds the string denoting the is_default field in the database.
	FieldIsDefault = "is_default"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldCreateBy holds the string denoting the create_by field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"
	// FieldUpdateBy holds the string denoting the update_by field in the database.
	FieldUpdateBy = "update_by"
	// Table holds the table name of the dict in the database.
	Table = "dicts"
)

// Columns holds all SQL columns for dict fields.
var Columns = []string{
	FieldID,
	FieldDictTypeID,
	FieldType,
	FieldLabel,
	FieldValue,
	FieldStatus,
	FieldRemark,
	FieldSort,
	FieldIsDefault,
	FieldCreateAt,
	FieldCreateBy,
	FieldUpdateAt,
	FieldUpdateBy,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType string
	// DefaultLabel holds the default value on creation for the "label" field.
	DefaultLabel string
	// DefaultValue holds the default value on creation for the "value" field.
	DefaultValue string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultRemark holds the default value on creation for the "remark" field.
	DefaultRemark string
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int8
	// DefaultIsDefault holds the default value on creation for the "is_default" field.
	DefaultIsDefault int8
	// DefaultCreateAt holds the default value on creation for the "create_at" field.
	DefaultCreateAt int32
	// DefaultCreateBy holds the default value on creation for the "create_by" field.
	DefaultCreateBy int32
	// DefaultUpdateAt holds the default value on creation for the "update_at" field.
	DefaultUpdateAt int32
	// DefaultUpdateBy holds the default value on creation for the "update_by" field.
	DefaultUpdateBy int32
)
