// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DictsColumns holds the columns for the "dicts" table.
	DictsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "bigintunsigned"}},
		{Name: "dict_type_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "bigintunsigned"}},
		{Name: "type", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(100)"}},
		{Name: "label", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(100)"}},
		{Name: "value", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(100)"}},
		{Name: "status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)unsigned"}},
		{Name: "remark", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(500)"}},
		{Name: "sort", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)unsigned"}},
		{Name: "is_default", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)unsigned"}},
		{Name: "create_at", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "create_by", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "update_at", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "update_by", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
	}
	// DictsTable holds the schema information for the "dicts" table.
	DictsTable = &schema.Table{
		Name:       "dicts",
		Columns:    DictsColumns,
		PrimaryKey: []*schema.Column{DictsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DictsTable,
	}
)

func init() {
}
