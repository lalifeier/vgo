syntax = "proto3";

package api.shop.admin.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/lalifeier/vvgo-mall/api/shop/admin/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info : {title : "account";
version : "1.0";
}
;
}
;

service Account {
  rpc Register(RegisterReq) returns (RegisterResp) {
    option (google.api.http) = {
      post : "/api/register"
      body : "*"
    };
  }
  rpc Login(LoginReq) returns (LoginResp) {
    option (google.api.http) = {
      post : "/api/login"
      body : "*"
    };
  }

  rpc CreateAccountUser(CreateAccountUserReq) returns (CreateAccountUserResp) {
    option (google.api.http) = {
      post : "/api/account_user"
      body : "*"
    };
  }
  rpc UpdateAccountUser(UpdateAccountUserReq) returns (UpdateAccountUserResp) {
    option (google.api.http) = {
      put : "/api/account_user/{id}"
      body : "*"
    };
  }
  rpc DeleteAccountUser(DeleteAccountUserReq) returns (DeleteAccountUserResp) {
    option (google.api.http) = {
      delete : "/api/account_user/{id}"
    };
  }
  rpc ListAccountUser(ListAccountUserReq) returns (ListAccountUserResp) {
    option (google.api.http) = {
      get : "/api/account_user/list"
    };
  }
  rpc PageListAccountUser(PageListAccountUserReq)
      returns (PageListAccountUserResp) {
    option (google.api.http) = {
      get : "/api/account_user"
    };
  }
  rpc GetAccountUser(GetAccountUserReq) returns (GetAccountUserResp) {
    option (google.api.http) = {
      get : "/api/account_user/{id}"
    };
  }

  rpc CreateStaff(CreateStaffReq) returns (CreateStaffResp) {
    option (google.api.http) = {
      post : "/api/staff"
      body : "*"
    };
  }
  rpc UpdateStaff(UpdateStaffReq) returns (UpdateStaffResp) {
    option (google.api.http) = {
      put : "/api/staff/{id}"
      body : "*"
    };
  }
  rpc DeleteStaff(DeleteStaffReq) returns (DeleteStaffResp) {
    option (google.api.http) = {
      delete : "/api/staff/{id}"
    };
  }
  rpc ListStaff(ListStaffReq) returns (ListStaffResp) {
    option (google.api.http) = {
      get : "/api/staff/list"
    };
  }
  rpc PageListStaff(PageListStaffReq) returns (PageListStaffResp) {
    option (google.api.http) = {
      get : "/api/staff"
    };
  }
  rpc GetStaff(GetStaffReq) returns (GetStaffResp) {
    option (google.api.http) = {
      get : "/api/staff/{id}"
    };
  }
}

message RegisterReq {
  string username = 1;
  string email = 2;
  string phone = 3;
  string password = 4;
}
message RegisterResp { int64 uid = 1; }
message LoginReq {
  string username = 1;
  string email = 2;
  string phone = 3;
  string password = 4;
}
message LoginResp { int64 uid = 1; }

message AccountUser { int64 id = 1; }
message CreateAccountUserReq {}
message CreateAccountUserResp { int64 id = 1; }
message UpdateAccountUserReq { int64 id = 1; }
message UpdateAccountUserResp {}
message DeleteAccountUserReq { int64 id = 1; }
message DeleteAccountUserResp {}
message GetAccountUserReq { int64 id = 1; }
message GetAccountUserResp { int64 id = 1; }
message ListAccountUserReq {}
message ListAccountUserResp { repeated AccountUser data = 1; }
message PageListAccountUserReq {
  int64 pageNum = 1;
  int64 pageSize = 4;
}
message PageListAccountUserResp {
  int64 totalPages = 1;
  int64 currentPage = 2;
  int64 pageSize = 3;
  repeated AccountUser data = 4;
}

message Staff { int64 id = 1; }
message CreateStaffReq {}
message CreateStaffResp { int64 id = 1; }
message UpdateStaffReq { int64 id = 1; }
message UpdateStaffResp {}
message DeleteStaffReq { int64 id = 1; }
message DeleteStaffResp {}
message GetStaffReq { int64 id = 1; }
message GetStaffResp { int64 id = 1; }
message ListStaffReq {}
message ListStaffResp { repeated Staff data = 1; }
message PageListStaffReq {
  int64 pageNum = 1;
  int64 pageSize = 4;
}
message PageListStaffResp {
  int64 totalPages = 1;
  int64 currentPage = 2;
  int64 pageSize = 3;
  repeated Staff data = 4;
}
